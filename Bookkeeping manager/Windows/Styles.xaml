<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Bookkeeping_manager.Windows"
                    xmlns:r="clr-namespace:ToggleSwitch;assembly=ToggleSwitch">

    <Style TargetType="Frame" x:Key="mainFrameStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Frame">
                    <DockPanel Margin="7, 0, 7, 7">
                        <Border 
                            BorderBrush="RoyalBlue"
                            Margin="7"
                            BorderThickness="7"
                            Padding="7"
                            CornerRadius="7"
                            Background="RoyalBlue"
                            >
                            <ContentPresenter/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationButton" TargetType="Button">
        <Setter Property="Margin" Value="10, 10, 0, 0"/>
        <Setter Property="Background" Value="#3399ff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="Black" BorderThickness="1" CornerRadius="7" Background="{TemplateBinding Background}" Padding="4, 1, 4, 1">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#0066cc"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionButton" TargetType="Button">
        <Setter Property="Background" Value="#3399ff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="Black" BorderThickness="1" CornerRadius="7" Background="{TemplateBinding Background}" Padding="4, 1, 4, 1">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#0066cc"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LableTitle" TargetType="Label">
        
    </Style>

    <Style x:Key="HorizontalDividingLine" TargetType="Separator">
        <Setter Property="Background" Value="RoyalBlue"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="10"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="24"/>
    </Style>

    <Style x:Key="ClientListItem" TargetType="ListViewItem">
    </Style>
    
    <Style x:Key="ClientList" TargetType="ListView">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ClientListItem}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style x:Key="Arrow" TargetType="Path">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ToggleArrow" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Path x:Name="UpArrow" Fill="Black" Data="M 0 12 L 24 12 L 12 0 Z" Style="{StaticResource Arrow}"/>
                            <Path x:Name="DownArrow" Fill="Black" Data="M 0 0 L 12 12 L 24 0 Z" Style="{StaticResource Arrow}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallTB" TargetType="TextBox">
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="MaxLines" Value="1"/>
        <Setter Property="Margin" Value="0, 1, 0, 1"/>
        <Setter Property="FontSize" Value="22"/>
    </Style>
    
    <Style x:Key="RegularTB" TargetType="TextBox">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="MaxLines" Value="1"/>
        <Setter Property="Margin" Value="0, 1, 0, 1"/>
        <Setter Property="FontSize" Value="22"/>
    </Style>

    <Style x:Key="LargeTB" TargetType="TextBox">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="MaxHeight" Value="150"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="MaxLines" Value="5"/>
        <Setter Property="Margin" Value="0, 1, 0, 1"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="ReadOnlyTB" TargetType="TextBox">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="MaxLines" Value="1"/>
        <Setter Property="Margin" Value="0, 1, 0, 1"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="#BABABA"/>
    </Style>
    <Style x:Key="ReadOnlyTBRed" TargetType="TextBox">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MaxHeight" Value="45"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="MaxLines" Value="1"/>
        <Setter Property="Margin" Value="0, 1, 0, 1"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="PaleVioletRed"/>
    </Style>
    
    <Style x:Key="ReadOnlyLargeTB" TargetType="TextBox">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="MaxHeight" Value="150"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="MaxLines" Value="5"/>
        <Setter Property="Margin" Value="0, 1, 0, 1"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="#BABABA"/>
    </Style>

    <Style x:Key="ScrollOveridedList" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Page">
        <Setter Property="Background" Value="AliceBlue"/>
    </Style>

    <Style x:Key="OrangeSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Margin" Value="35,0,40,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="53" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          RecognizesAccessKey="True" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        <Grid>
                            <Border x:Name="BackgroundBorder" BorderBrush="#FF939393" BorderThickness="1" CornerRadius="3" Height="27" Width="94">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FFB5B5B5" Offset="0" />
                                        <GradientStop Color="#FFDEDEDE" Offset="0.1" />
                                        <GradientStop Color="#FFEEEEEE" Offset="0.5" />
                                        <GradientStop Color="#FFFAFAFA" Offset="0.5" />
                                        <GradientStop Color="#FFFEFEFE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <!--<Ellipse x:Name="Off" Width="14" Height="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Line x:Name="On" X1="0" Y1="0" X2="0" Y2="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                                    <TextBlock x:Name="Off" Text="N" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="On" Text="Y" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <Border BorderBrush="#FF939393" HorizontalAlignment="Left" x:Name="slider" Width="41" Height="27" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5" Margin="0">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFF0F0F0" Offset="0" />
                                        <GradientStop Color="#FFCDCDCD" Offset="0.1" />
                                        <GradientStop Color="#FFFBFBFB" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <!--<Setter TargetName="On" Property="Stroke" Value="White" />
                            <Setter TargetName="Off" Property="Stroke" Value="White" />-->
                            <!-- Change Orange or Blue color here -->
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedOrange}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedOrangeBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- ToDo: Add Style for Isenabled == False -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="LeftRightArrow" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid Background="Transparent">
                            <ContentPresenter></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="r:HorizontalToggleSwitch">
        <Setter Property="CheckedContent" Value="Y"/>
        <Setter Property="UncheckedContent" Value="N"/>
        <Setter Property="CheckedBackground" Value="Orange"/>
        <Setter Property="UncheckedBackground" Value="LightGray"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style x:Key="VerticalSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type HorizontalAlignment}}">
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TransformGroup.Children>
                        <TransformCollection>
                            <RotateTransform Angle="90"/>
                        </TransformCollection>
                    </TransformGroup.Children>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="2" ScaleY="2"/>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>